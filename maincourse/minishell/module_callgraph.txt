main() <int main (int argc, char *argv[], char **env_p) at ./src/main.c:15>:
    ft_putstr()
    init_pnt()
    set_mode()
    readline()
    built_exit()
    add_history()
    path_getter()
    tokener()
    extender()
    parser()
    execution()
    close()
    cmdt_cleaning()
    pntr_cleaning()
tokener() <int tokener (t_data *pnt) at ./src/tokenizer/tokenizer.c:62>:
    ft_calloc()
    error_out()
    parse_input_to_tokens() <int parse_input_to_tokens (t_data *pnt, int *i) at ./src/tokenizer/tokenizer.c:47>:
        realloc_and_check() <int realloc_and_check (t_data *pnt) at ./src/tokenizer/parse_input_to_tokens.c:36>:
            reallocate_tokens_if_max() <int reallocate_tokens_if_max (t_data *pnt, int max_token) at ./src/tokenizer/tokenizer_utilities.c:30>:
                ft_calloc()
                error_out()
                ft_strdup_fd()
                clean_token_array() <int clean_token_array (t_token *array_tokens, int max_number_token, t_data *pnt) at ./src/tokenizer/tokenizer_utilities.c:15>:
                    free()
                free()
        handle_pipe() <int handle_pipe (t_data *pnt) at ./src/tokenizer/parse_input_to_tokens.c:44>:
        fill_redirection() <int fill_redirection (t_data *pnt, char const *str) at ./src/tokenizer/parse_input_to_tokens.c:15>:
        handle_quotes() <int handle_quotes (t_data *pnt, int *i) at ./src/tokenizer/parse_input_to_tokens.c:51>:
            filling_quotes() <int filling_quotes (t_data *pnt, char const *str, char tmp) at ./src/tokenizer/parse_input_to_tokens_helpers.c:63>:
                get_length_of_quotes() <int get_length_of_quotes (char const *s, char tmp) at ./src/tokenizer/parse_input_to_tokens_helpers.c:48>
                ft_calloc()
                error_out()
            error_in_syntax()
        handle_word() <int handle_word (t_data *pnt, int *i) at ./src/tokenizer/parse_input_to_tokens.c:67>:
            word_filling() <int word_filling (t_data *pnt, char const *s) at ./src/tokenizer/parse_input_to_tokens_helpers.c:29>:
                ft_calloc()
                count_characters() <int count_characters (char const *str) at ./src/tokenizer/parse_input_to_tokens_helpers.c:15>
                error_out()
            error_out()
    syntax_checking() <int syntax_checking (t_data *pnt) at ./src/tokenizer/tokenizer.c:26>:
        check_if_redirection()
        error_in_syntax()
        check_syntax_redirection() <int check_syntax_redirection (t_data *pnt, int i) at ./src/tokenizer/tokenizer.c:15>:
            check_if_redirection()
            error_in_syntax()
parser() <int parser (t_data *pnt) at ./src/parser/parser.c:76>:
    words_merging() <int words_merging (t_data *pnt) at ./src/parser/parser_func.c:58>:
        ft_calloc()
        new_tokens_count() <int new_tokens_count (t_data *pnt) at ./src/parser/parser_utils.c:38>:
        error_out()
        token_copy() <int token_copy (t_data *pnt, t_token *new_tokens, int *i, int *j) at ./src/parser/parser_merge_words.c:123>:
            check_arguments() <int check_arguments (t_type_token type) at ./src/parser/parser_utils.c:15>:
            words_splitting() <int words_splitting (t_data *pnt, t_token *new_tokens, int *i, int *j) at ./src/parser/parser_merge_words.c:63>:
                ft_split_fd()
                error_out()
                clean_double_pointer() <void clean_double_pointer (char **pnt) at ./src/parser/parser_merge_words.c:44>:
                    free()
                copy_normalization() <int copy_normalization (t_token *new_tokens, int *i, int *j, char **tmp) at ./src/parser/parser_merge_words.c:15>:
                    ft_strjoin()
                    free()
                    check_if_redirection() <int check_if_redirection (t_type_token type) at ./src/parser/parser_utils.c:20>:
                    ft_strdup_fd()
            copy_concat_create() <int copy_concat_create (t_data *pnt, t_token *new_tokens, int *src_index, int *dest_index) at ./src/parser/parser_merge_words.c:94>:
                ft_strjoin()
                error_out()
                free()
                ft_strdup()
        clean_tokens()
        free()
    count_pipes() <int count_pipes (t_data *pnt) at ./src/parser/parser_utils.c:25>:
    ft_calloc()
    error_out()
    cmdt_init() <int cmdt_init (t_data *pnt, int j, int *i) at ./src/parser/parser.c:47>:
        counting_arguments() <int counting_arguments (t_data *pnt, int i) at ./src/parser/parser.c:15>:
            check_arguments() <int check_arguments (t_type_token type) at ./src/parser/parser_utils.c:15>:
            check_if_redirection() <int check_if_redirection (t_type_token type) at ./src/parser/parser_utils.c:20>:
        ft_calloc()
        error_out()
        redirections_fill() <int redirections_fill (t_data *pnt, int j, int i) at ./src/parser/parser_func.c:29>:
            redirections_count() <int redirections_count (t_data *pnt, int i) at ./src/parser/parser_func.c:15>:
                check_if_redirection() <int check_if_redirection (t_type_token type) at ./src/parser/parser_utils.c:20>:
            ft_calloc()
            error_out()
            check_if_redirection() <int check_if_redirection (t_type_token type) at ./src/parser/parser_utils.c:20>:
            ft_strdup_fd()
        test_multiline() <void test_multiline (t_data *pnt, int j) at ./src/parser/parser.c:30>:
        parse_and_fill_command() <int parse_and_fill_command (t_data *pnt, int command_index, int token_index) at ./src/parser/parse_and_fill_command.c:98>:
            process_token() <int process_token (t_data *pnt, int token_index, int command_index, int *argument_count) at ./src/parser/parse_and_fill_command.c:67>:
                check_arguments() <int check_arguments (t_type_token type) at ./src/parser/parser_utils.c:15>:
                check_if_redirection() <int check_if_redirection (t_type_token type) at ./src/parser/parser_utils.c:20>:
                set_command() <int set_command (t_data *pnt, int command_index, int token_index) at ./src/parser/parse_and_fill_command.c:22>:
                    ft_strdup()
                    error_out()
                add_argument() <int add_argument (t_data *pnt, int command_index, int argument_count, int token_index) at ./src/parser/parse_and_fill_command.c:38>:
                    ft_strdup_fd()
                    error_out()
            finalize_arguments() <void finalize_arguments (t_data *pnt, int command_index, int argument_count) at ./src/parser/parse_and_fill_command.c:48>:
    cleanup_tokens()
extender() <int extender (t_data *pnt) at ./src/extender/extender.c:91>:
    if_has() <int if_has (const char *n, char c) at ./src/extender/extender_utils.c:27>:
    check_exception() <int check_exception (t_data *pnt, int i) at ./src/extender/extender_utils.c:51>:
        ft_strlen()
    token_expansion() <int token_expansion (char *var, t_data *pnt, int i, int j) at ./src/extender/extender.c:62>:
        dollar_replacement() <int dollar_replacement (char *string, char **value, t_data *pnt, int exception) at ./src/extender/extender.c:39>:
            length_of_variable() <int length_of_variable (const char *n) at ./src/extender/extender_utils.c:15>:
                ft_isalnum()
            ft_strdup_fd()
            ft_substr()
            value_of_variable() <char *value_of_variable (t_data *pnt, char *i) at ./src/extender/extender.c:27>:
                ft_strcmp()
                ft_itoa()
                variable_index() <int variable_index (char **env, char *n) at ./src/extender/extender_utils.c:60>:
                    substring_beginning() <int substring_beginning (char *word, char *start) at ./src/extender/extender.c:15>:
                    ft_strlen()
                ft_strdup_fd()
                ft_strlen()
            free()
        substring_concatenation() <int substring_concatenation (char *string, char **pnt) at ./src/extender/extender_utils.c:40>:
            ft_substr()
        free()
        ft_strcat()
execution() <void execution (t_data *pnt) at ./src/execution/exec_main.c:45>:
    setup_pipes() <int setup_pipes (t_data *pnt) at ./src/execution/exec_main.c:15>:
        pipe()
        error_out()
    error_out()
    execute_command() <void execute_command (t_data *pnt, int i) at ./src/execution/exec_commands.c:129>:
        input_output_redirect() <int input_output_redirect (t_data *pnt, t_tab_cmd *tab_cmd) at ./src/execution/exec_redirections.c:77>:
            ft_putstr_fd()
            handle_input_redirection() <int handle_input_redirection (t_data *pnt, t_tab_cmd *tab_cmd, int i) at ./src/execution/exec_redirections.c:52>:
                close()
                open()
                error_out()
            redirects_cmd_tab() <int redirects_cmd_tab (t_data *pnt, t_tab_cmd *tab_cmd, int i) at ./src/execution/exec_redirections.c:15>:
                close()
                open()
                error_out()
                create_heredoc()
        pipelines_redirect() <int pipelines_redirect (t_data *pnt, int i) at ./src/execution/exec_pipes.c:107>:
            handle_input_fd() <void handle_input_fd (t_data *pnt, int i) at ./src/execution/exec_pipes.c:25>:
                dup2()
                close()
            handle_output_fd() <void handle_output_fd (t_data *pnt, int i) at ./src/execution/exec_pipes.c:44>:
                dup2()
                close()
            manage_pipe_ends_and_fd_before() <void manage_pipe_ends_and_fd_before (t_data *pnt, int i) at ./src/execution/exec_pipes.c:66>:
                close()
            restore_standard_fds() <void restore_standard_fds (t_data *pnt) at ./src/execution/exec_pipes.c:86>:
                dup2()
            cleanup_heredoc() <void cleanup_heredoc (t_data *pnt, int i) at ./src/execution/exec_utils.c:81>:
                unlink()
                free()
        close()
        change_fd_input_output() <int change_fd_input_output (t_data *pnt, t_tab_cmd *tab_cmd, int i) at ./src/execution/exec_utils.c:15>
        if_builtin()
        execute_builtin()
        execute_external_command() <void execute_external_command (t_data *pnt, t_tab_cmd *cmd, int index) at ./src/execution/exec_commands.c:102>:
            find_exec() <int find_exec (t_data *pnt, t_tab_cmd *tab_cmd) at ./src/execution/exec_search.c:100>:
                ft_printf_fd()
                ft_strchr()
                check_valid_execution() <int check_valid_execution (t_tab_cmd *tab_cmd, t_data *pnt) at ./src/execution/exec_search.c:42>:
                    access()
                    opendir()
                    ft_printf_fd()
                    closedir()
                path_searching() <int path_searching (t_data *pnt, t_tab_cmd *tab_cmd) at ./src/execution/exec_utils_2.c:43>:
                    construct_full_path() <char *construct_full_path (char *path, char *cmd) at ./src/execution/exec_utils_2.c:15>:
                        ft_strjoin()
                        free()
                    cleanup_and_return() <int cleanup_and_return (char *msg, char *to_free, int return_value) at ./src/execution/exec_utils_2.c:35>:
                        free()
                        ft_putstr_fd()
                    access()
                    handle_path_found() <int handle_path_found (t_tab_cmd *tab_cmd, char *full_path) at ./src/execution/exec_utils_2.c:28>:
                        free()
                    free()
                    find_path() <int find_path (t_data *pnt, t_tab_cmd *tab_cmd) at ./src/execution/exec_utils.c:28>:
                        ft_strdup_fd()
                        error_out()
                        ft_strjoin()
                        access()
                        free()
                is_exist() <int is_exist (t_data *pnt, t_tab_cmd *tab_cmd, int i) at ./src/execution/exec_search.c:71>:
                    ft_strdup_fd()
                    error_out()
                    ft_strjoin()
                    access()
                    free()
                    ft_printf_fd()
                    is_command() <int is_command (t_data *pnt, t_tab_cmd *tab_cmd) at ./src/execution/exec_search.c:15>:
                        ft_strdup_fd()
                        error_out()
                        ft_strjoin()
                        access()
                        free()
                        ft_printf_fd()
            command_execution() <void command_execution (t_data *pnt, t_tab_cmd *tab_cmd, int i) at ./src/execution/exec_commands.c:63>:
                fork()
                error_out()
                execute_child_process() <void execute_child_process (t_data *pnt, t_tab_cmd *tab_cmd) at ./src/execution/exec_commands.c:32>:
                    handle_redirection() <void handle_redirection (int fd, int std_channel) at ./src/execution/exec_utils.c:55>:
                        dup2()
                        close()
                    close_pipe_end() <void close_pipe_end (int *fd_pipe, int end) at ./src/execution/exec_utils.c:61>:
                        close()
                    set_mode()
                    execve()
                    error_out()
                    total_clean()
                    exit()
                close_pipe_end() <void close_pipe_end (int *fd_pipe, int end) at ./src/execution/exec_utils.c:61>:
                    close()
                close()
                fd_cleaning()
            pipelines_redirect() <int pipelines_redirect (t_data *pnt, int i) at ./src/execution/exec_pipes.c:107>:
                handle_input_fd() <void handle_input_fd (t_data *pnt, int i) at ./src/execution/exec_pipes.c:25>:
                    dup2()
                    close()
                handle_output_fd() <void handle_output_fd (t_data *pnt, int i) at ./src/execution/exec_pipes.c:44>:
                    dup2()
                    close()
                manage_pipe_ends_and_fd_before() <void manage_pipe_ends_and_fd_before (t_data *pnt, int i) at ./src/execution/exec_pipes.c:66>:
                    close()
                restore_standard_fds() <void restore_standard_fds (t_data *pnt) at ./src/execution/exec_pipes.c:86>:
                    dup2()
                cleanup_heredoc() <void cleanup_heredoc (t_data *pnt, int i) at ./src/execution/exec_utils.c:81>:
                    unlink()
                    free()
    wait_for_childs() <void wait_for_childs (t_data *pnt) at ./src/execution/exec_main.c:25>:
        waitpid()
        WIFSIGNALED()
        WTERMSIG()
        WIFEXITED()
        WEXITSTATUS()
clean_tokens() <int clean_tokens (t_token *tokens, int max, t_data *pnt) at ./src/utils/cleaning_3.c:15>:
    free()
cleanup_commands() <void cleanup_commands (t_data *pnt) at ./src/utils/cleaning.c:35>:
    free()
cleanup_tokens() <void cleanup_tokens (t_data *pnt) at ./src/utils/cleaning.c:15>:
    free()
create_heredoc() <int create_heredoc (t_data *pnt, t_tab_cmd *tab_cmd, int i) at ./src/utils/multiline.c:41>:
    name_create_multiline() <char *name_create_multiline (int i) at ./src/utils/multiline.c:15>:
        ft_itoa()
        ft_strcat()
        free()
    error_out() <int error_out (t_data *pnt, char *s, int n) at ./src/utils/utils.c:30>:
        ft_printf_fd()
        perror()
    open_temp_file() <int open_temp_file (char *object, t_data *pnt) at ./src/utils/multiline.c:28>:
        open()
        free()
        error_out() <int error_out (t_data *pnt, char *s, int n) at ./src/utils/utils.c:30>:
            ft_printf_fd()
            perror()
    free()
    in_to_fd() <int in_to_fd (t_data *pnt, int fd, char *delimiter) at ./src/utils/heredoc_utils.c:89>:
        set_mode()
        readline()
        close_and_free() <int close_and_free (char *buffer, int fd, int return_value) at ./src/utils/heredoc_utils.c:15>:
            close()
            free()
        process_buffer() <int process_buffer (t_data *pnt, char **buffer, int fd, char *delimiter) at ./src/utils/heredoc_utils.c:75>:
            ft_strcmp()
            free()
            broaden_local_token() <char *broaden_local_token (t_data *pnt, char *letter) at ./src/utils/heredoc_utils.c:46>:
                using_dollar() <int using_dollar (char *letter, char **result, t_data *pnt, int e) at ./src/utils/heredoc_utils.c:23>:
                    length_of_variable()
                    ft_strdup_fd()
                    ft_substr()
                    value_of_variable()
                    free()
                substring_concatenation()
                free()
                ft_strcat()
            ft_putendl_fd()
    unlink()
    close()
    open()
    ft_strdup_fd()
env_init() <void env_init (t_data *pnt, char **env) at ./src/utils/main_utils.c:37>:
    ft_calloc()
    ft_strdup_fd()
env_var_count() <int env_var_count (char **env) at ./src/utils/export_utils.c:45>
error_in_syntax() <void error_in_syntax (int type, t_data *pnt) at ./src/utils/utils.c:50>:
    ft_putstr_fd()
fd_cleaning() <void fd_cleaning (t_data *pnt, t_tab_cmd *tab_cmd, int i) at ./src/utils/cleaning_2.c:76>:
    close()
    unlink()
    free()
free_str_tab() <void free_str_tab (char **tab) at ./src/utils/export_utils.c:24>:
    free_ptr() <void free_ptr (void *ptr) at ./src/utils/export_utils.c:15>:
        free()
    free()
ft_error() <void ft_error (char *str) at ./src/utils/utils.c:22>:
    ft_putstr_fd()
    perror()
    exit()
ft_putstr_int() <int ft_putstr_int (char *s, int fd) at ./src/utils/exit_utils.c:41>:
    ft_putchar_fd()
get_data() <t_data *get_data (void) at ./src/utils/utils.c:15>:
init_pnt() <void init_pnt (t_data *pnt, char **env) at ./src/utils/init.c:45>:
    init_start_file_desc() <void init_start_file_desc (t_data *pnt) at ./src/utils/init.c:15>:
        dup()
        fd_exit() <void fd_exit (t_data *pnt, int code_exit) at ./src/utils/exit_utils.c:33>:
            perror()
            total_clean() <void total_clean (t_data *pnt) at ./src/utils/cleaning_2.c:95>:
                clean_double_pointer()
                pntr_cleaning() <void pntr_cleaning (t_data *pnt) at ./src/utils/cleaning_2.c:51>:
                    free()
                    cmdt_cleaning() <void cmdt_cleaning (t_data *pnt) at ./src/utils/cleaning_2.c:38>:
                        free_cmdt_resources() <void free_cmdt_resources (t_tab_cmd *cmd) at ./src/utils/cleaning_2.c:15>:
                            free()
                        free()
                close()
            exit()
    string_to_array() <char **string_to_array (char **source) at ./src/utils/init.c:25>:
        ft_calloc()
        ft_split_length()
        ft_strdup_fd()
        free_string_array() <void free_string_array (char **pnt) at ./src/utils/exit_utils.c:15>:
            free()
    fd_exit() <void fd_exit (t_data *pnt, int code_exit) at ./src/utils/exit_utils.c:33>:
        perror()
        total_clean() <void total_clean (t_data *pnt) at ./src/utils/cleaning_2.c:95>:
            clean_double_pointer()
            pntr_cleaning() <void pntr_cleaning (t_data *pnt) at ./src/utils/cleaning_2.c:51>:
                free()
                cmdt_cleaning() <void cmdt_cleaning (t_data *pnt) at ./src/utils/cleaning_2.c:38>:
                    free_cmdt_resources() <void free_cmdt_resources (t_tab_cmd *cmd) at ./src/utils/cleaning_2.c:15>:
                        free()
                    free()
            close()
        exit()
    increase_shlvl() <int increase_shlvl (t_data *pnt) at ./src/utils/env.c:44>:
        variable_index()
        create_env_var() <int create_env_var (t_data *pnt, char *key, char *keep) at ./src/utils/env.c:15>:
            ft_strcat()
            free()
            ft_split_length()
            ft_calloc()
        ft_atoi()
        ft_itoa()
        ft_strcat()
        free()
path_getter() <char **path_getter (t_data *pnt, int i) at ./src/utils/main_utils.c:15>:
    ft_strstr()
    ft_split_fd()
    free()
    error_out() <int error_out (t_data *pnt, char *s, int n) at ./src/utils/utils.c:30>:
        ft_printf_fd()
        perror()
print_env_vars() <int print_env_vars (t_data *pnt) at ./src/utils/env.c:95>:
    bubble_sort() <void bubble_sort (char **array, int n) at ./src/utils/env.c:69>:
        ft_strcmp()
    printf()
safe_free() <void safe_free (void **ptr) at ./src/utils/utils.c:41>:
    free()
set_error_and_code() <void set_error_and_code (char *cmd_arg, int *code_exit) at ./src/utils/cleaning.c:63>:
    ft_printf_fd()
execute_builtin() <void execute_builtin (t_data *pnt, t_tab_cmd *cmd_tab, int i) at ./src/builtins/builtin.c:50>:
    create_builtin_fd() <void create_builtin_fd (t_tab_cmd *cmd_tab, t_data *pnt) at ./src/builtins/builtin.c:37>:
        dup2()
        close()
    ft_strcmp()
    built_echo() <void built_echo (t_data *pnt, t_tab_cmd *tab_cmd) at ./src/builtins/echo.c:48>:
        is_flag() <int is_flag (char *arg) at ./src/builtins/echo.c:21>
        ft_putstr_fd()
    built_cd() <int built_cd (t_data *pnt, t_tab_cmd *tab_cmd) at ./src/builtins/cd.c:105>:
        get_target_path() <char *get_target_path (t_tab_cmd *tab_cmd) at ./src/builtins/cd.c:61>:
            getenv()
            ft_putstr_fd()
        change_directory_and_update_pwd() <int change_directory_and_update_pwd (t_data *pnt, char *path) at ./src/builtins/cd.c:82>:
            getcwd()
            change_folder() <int change_folder (t_data *pnt, char *path, char *pwd) at ./src/builtins/cd.c:34>:
                chdir()
                ft_printf_fd()
                free()
                perror()
                make_var() <int make_var (t_data *pnt, char *var_name, char *value) at ./src/builtins/cd.c:15>:
                    variable_index()
                    create_env_var()
                    ft_strcat()
                    free()
            error_out()
            free()
            make_var() <int make_var (t_data *pnt, char *var_name, char *value) at ./src/builtins/cd.c:15>:
                variable_index()
                create_env_var()
                ft_strcat()
                free()
    build_pwd() <void build_pwd (t_data *pnt) at ./src/builtins/pwd.c:15>:
        getcwd()
        printf()
        free()
    built_export() <int built_export (t_data *pnt, t_tab_cmd *cmd) at ./src/builtins/export.c:168>:
        print_env_vars()
        is_valid_env_var_key() <bool is_valid_env_var_key (char *var) at ./src/builtins/export.c:140>:
            ft_isalpha()
            ft_isalnum()
        set_error_and_code()
        ft_strchr()
        ft_strndup()
        ft_strdup()
        set_env_var() <bool set_env_var (t_data *pnt, char *key, char *value) at ./src/builtins/export.c:90>:
            get_env_var_index() <int get_env_var_index (char **env, char *var) at ./src/builtins/export.c:56>:
                ft_strjoin()
                ft_strncmp()
                ft_strlen()
                free_ptr()
            ft_strjoin()
            free_ptr()
            env_var_count()
            realloc_env_vars() <char **realloc_env_vars (t_data *pnt, int size) at ./src/builtins/export.c:26>:
                ft_calloc()
                ft_strdup()
                free_ptr()
                free()
        free()
    built_unset() <void built_unset (t_data *pnt, t_tab_cmd *tab_cmd) at ./src/builtins/unset.c:60>:
        remove_vars_of_arr() <int remove_vars_of_arr (t_data *pnt, char *peg) at ./src/builtins/unset.c:34>:
            variable_index()
            array_length() <int array_length (char **arr) at ./src/builtins/unset.c:15>:
            ft_calloc()
            change_place() <int change_place (int flag, int i, int j) at ./src/builtins/unset.c:27>
            free()
        error_out()
    built_env() <int built_env (t_data *pnt) at ./src/builtins/env.c:68>:
        ft_putendl_fd()
    built_exit() <void built_exit (t_data *pnt, t_tab_cmd *tab_cmd) at ./src/builtins/exit.c:95>:
        total_clean()
        exit()
        ok_for_numeric() <int ok_for_numeric (char *s) at ./src/builtins/exit.c:15>:
            ft_isdigit()
        ft_printf_fd()
        built_exit_annex() <void built_exit_annex (t_data *pnt, t_tab_cmd *tab_cmd, long int exit_code, int cnt) at ./src/builtins/exit.c:57>:
            total_clean()
            exit()
            to_long_int() <long int to_long_int (char *s) at ./src/builtins/exit.c:30>:
            ft_printf_fd()
    recreate_file_descriptors() <void recreate_file_descriptors (t_data *pnt, t_tab_cmd *cmd_tab, int i) at ./src/builtins/builtin.c:15>:
        close()
        dup2()
        unlink()
        free()
if_builtin() <int if_builtin (t_tab_cmd *tab_cmd) at ./src/builtins/builtin.c:70>:
    ft_strcmp()
index_sort() <void index_sort (char **arr, int str_count, int *index) at ./src/builtins/env.c:56>:
    init_index_array() <void init_index_array (int *index, int size) at ./src/builtins/env.c:15>
    compare_and_swap() <int compare_and_swap (char **arr, int *index, int size) at ./src/builtins/env.c:36>:
        ft_strncmp()
        ft_strlen()
        swap_elements() <void swap_elements (int *a, int *b) at ./src/builtins/env.c:27>
set_mode() <void set_mode (t_data *pnt, t_set_mode mode) at ./src/signals/signal.c:77>:
    start_signals() <void start_signals (t_data *pnt) at ./src/signals/signal.c:50>:
        ft_setup_term() <void ft_setup_term (void) at ./src/signals/signal.c:41>:
            tcgetattr()
            tcsetattr()
        signal()
        sigint_manager() <void sigint_manager (int status) at ./src/signals/signal.c:18>:
            ft_putchar_fd()
            rl_on_new_line()
            rl_replace_line()
            rl_redisplay()
        manage_multiline() <void manage_multiline (int status) at ./src/signals/signal.c:30>:
            ioctl()
            rl_replace_line()
            rl_on_new_line()
